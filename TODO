- Sampling implementations
  * N-rooks
  * Hammersley

- Textures
  * Procedural
  * Image-based

- Refraction

- Animation
  * type Anim a = Int -> a take frame number to generate next value
  * building blocks for building value animations need to be implemented (lerp,
    say)
  * SceneDesc: instead of taking constants everywhere, take Anims everywhere
  * Building scenes from descriptions: scene builder takes frame number,
    generates next values while constructing scene
  * Nothing about underlying scene implementation needs to change since all
    value generation happens in the scene build process
  * Command line: take frame number
  * GUI: show only current frame for now, work out how to deal with multiple
    frames later
  * network: communicate current frame number (send this with the SetScene
    command so as to be part of the initial scene data)
  * file handler: make frame part of file number
  * terminology: what we call "frame" now becomes "batch", sample root becomes
    "number of samples per batch", number of frames becomes "number of sample
    batches per frame"
  * system still only emits one frame (batches * samples per batch), shell loop
    can generate a set of frames for stitching via other software

- Global illumination technique(s)

- Load scenes from disk
  * GUI: keystroke to trigger a reload scenes from disk and re-render
  * COLLADA (or at least a subset of it)

- Mesh rendering features
  * Vertex colors & interpolation? Affect material shading & properties?
  * Consider triangulation for faces with 4 vertices
