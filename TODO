- General
  * Support rendering frame sequences on multiple hosts

- Performance
  * Implement bounding volume hierarchy support
  * Generate vectors of random values in Samplers.hs to improve
    performance, test sample setup time in Main.hs
  * Factor out Local.hs sample setup code for benchmarking
  * Benchmark individual samplers and hit functions with criterion;
    create tool to run all benchmarks and generate a report for
    comparison (e.g. during toolchain upgrades, etc.)
  * Use uniform vectors in samplers and in sample index generation in
    Local.hs instead of uniformR (benchmark to test the difference)
  * Conditional exporting via CPP for benchmarking? (Will also need
    conditional exporting to use scene builder functions to supply test
    cases since we won't want to build an entire scene)
  * Use vectors instead of lists in some internal sampler operations
    (e.g. shuffling using lists and !! will be slow)

- Sampling
  * Make sampler-debug more useful (e.g. take side length options,
    optionally emit sample values)
  * Make more samplers configurable rather than hard-coding in the
    rendering setup process. Done so far: lens sampler, pixel sampler;
    to do next: square sampler, object sampler (currently object uses
    square)

- Effects
  * Refraction
  * Textures
    * Procedural
    * Image-based
  * Global illumination technique(s)
  * Mesh rendering features
    * Vertex colors & interpolation? Affect material shading &
      properties?
    * Consider triangulation for faces with 4 vertices

- Animation
  * animate more things, add more animated value types

- GUI
  * Keystroke to trigger a reload scenes from disk and re-render
  * Support showing successive frames for multi-frame renderings?
  * Make depth- and breadth-first rendering configurable
